[{"C:\\Users\\qendr\\Desktop\\Ylli\\Projects\\pathfinding\\src\\index.js":"1","C:\\Users\\qendr\\Desktop\\Ylli\\Projects\\pathfinding\\src\\App.js":"2","C:\\Users\\qendr\\Desktop\\Ylli\\Projects\\pathfinding\\src\\components\\Grid\\index.js":"3","C:\\Users\\qendr\\Desktop\\Ylli\\Projects\\pathfinding\\src\\api\\graph.js":"4","C:\\Users\\qendr\\Desktop\\Ylli\\Projects\\pathfinding\\src\\components\\Grid\\Square\\index.js":"5","C:\\Users\\qendr\\Desktop\\Ylli\\Projects\\pathfinding\\src\\api\\datastructures\\queue.js":"6"},{"size":170,"mtime":1609161929276,"results":"7","hashOfConfig":"8"},{"size":188,"mtime":1609161929259,"results":"9","hashOfConfig":"8"},{"size":1584,"mtime":1609172318012,"results":"10","hashOfConfig":"8"},{"size":1451,"mtime":1609172232504,"results":"11","hashOfConfig":"8"},{"size":694,"mtime":1609161929273,"results":"12","hashOfConfig":"8"},{"size":382,"mtime":1609161929266,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"oqq262",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\qendr\\Desktop\\Ylli\\Projects\\pathfinding\\src\\index.js",[],["28","29"],"C:\\Users\\qendr\\Desktop\\Ylli\\Projects\\pathfinding\\src\\App.js",[],"C:\\Users\\qendr\\Desktop\\Ylli\\Projects\\pathfinding\\src\\components\\Grid\\index.js",[],"C:\\Users\\qendr\\Desktop\\Ylli\\Projects\\pathfinding\\src\\api\\graph.js",["30"],"import Queue from './datastructures/queue';\n\nconst graph = (heigth, width) => {\n  let graph = {};\n  let visited = [];\n  let queue = Queue();\n  const getGraph = () => Object.entries( graph).map(item => {\n  \n    let key = item[0];\n    let value = item[1];\n    return {[key]:value,};\n  })\n  // const getGraph = () => graph;\n  for (let row = 0; row < heigth; row++) {\n    // graph[row] = {};\n    for (let col = 0; col < width; col++) {\n      graph[`${row} ${col}`] = [\n        { row: row, col: col - 1 },\n        { row: row, col: col + 1 },\n        { row: row - 1, col: col },\n        { row: row + 1, col: col },\n      ]\n        .filter(\n          (item) =>\n            item.row >= 0 &&\n            item.row <= heigth - 1 &&\n            item.col >= 0 &&\n            item.col <= width - 1\n        )\n        // .map((item) => `${item[\"row\"]} ${item[\"col\"]}`);\n        .map((item) => `${item[\"row\"]} ${item[\"col\"]}`);\n    }\n  }\n  const bfs = (start) => {\n    \n    visited.push(start);\n    queue.enqueue(start);\n\n    for(let node in graph){\n\n      while (!queue.isEmpty()) {\n        let s = queue.dequeue();\n        \n  \n        graph[s].forEach((neighbour) => {\n          if (!visited.includes(neighbour)) {\n            console.log(neighbour);\n            visited.push(neighbour);\n            queue.enqueue(neighbour);\n          }\n        });\n      }\n    }\n    console.table(visited)\n    \n  };\n  return {\n    getGraph,\n    bfs,\n  };\n};\nexport default graph;\n\n","C:\\Users\\qendr\\Desktop\\Ylli\\Projects\\pathfinding\\src\\components\\Grid\\Square\\index.js",[],"C:\\Users\\qendr\\Desktop\\Ylli\\Projects\\pathfinding\\src\\api\\datastructures\\queue.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":39,"column":13,"nodeType":"37","messageId":"38","endLine":39,"endColumn":17},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'node' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]